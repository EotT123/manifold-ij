<idea-plugin>
  <id>manifold.ij</id>
  <name>Manifold</name>
  <description><![CDATA[
    <b><a href="http://manifold.systems/">Manifold</a> support for IntelliJ IDEA.</b><br>
    <br>
    <p>At its core <a href="https://manifold.systems/">Manifold</a> is a unique framework to dynamically and seamlessly extend
    Java's type system. Building on this core framework Manifold provides a set of
    key features found in other programming languages and platforms:</p>
    <ul>
    <li><strong>Type-safe Metaprogramming</strong> -- similar in concept to <a href="https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/information-rich-themes-v4.pdf">F# <em>type providers</em></a></li>
    <li><strong>Extension Methods</strong> -- comparable to the same feature in <a href="https://kotlinlang.org/docs/reference/extensions.html">Kotlin</a> and <a href="https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/extension-methods">C#</a></li>
    <li><strong>Structural Typing</strong> -- much like interfaces in <a href="https://www.typescriptlang.org/docs/handbook/interfaces.html">TypeScript</a> and <a href="https://tour.golang.org/methods/10">Go</a></li>
    </ul>
    <p>Leveraging these key features Manifold delivers a powerful set of Java extensions including <strong>JSON</strong>
    integration, <strong>JavaScript</strong> interop, <strong>Structural typing</strong>, seamless <strong>extension libraries</strong> to Java's
    runtime classes, and (coming soon) type-safe access to raw <strong>SQL</strong> and <strong>DDL</strong>.</p>
  ]]></description>
  <version>This value is patched by the build script</version>
  <vendor email="admin@manifold.systems" url="http://manifold.systems">manifold.systems</vendor>
  <!-- please see http://confluence.jetbrains.com/display/IDEADEV/Build+Number+Ranges for description -->
  <idea-version since-build="This value is patched by the build script"/>

  <actions>
    <group id="Manifold.New">
      <action id="Manifold.NewExtensionClass" class="manifold.ij.actions.CreateExtensionMethodsClassAction"/>
      <add-to-group group-id="NewGroup1" anchor="last"/>
    </group>
  </actions>

  <project-components>
    <component>
      <implementation-class>manifold.ij.core.ManProjectComponent</implementation-class>
    </component>
  </project-components>

  <extensions defaultExtensionNs="com.intellij">
    <java.elementFinder implementation="manifold.ij.extensions.ManTypeFinder" order="first"/>
    <java.shortNamesCache implementation="manifold.ij.extensions.ManShortNamesCache"/>
    <gotoDeclarationHandler implementation="manifold.ij.extensions.ManGotoDeclarationHandler"/>
    <lang.psiAugmentProvider implementation="manifold.ij.extensions.ManAugmentProvider"/>
    <!--<annotator language="" implementationClass="manifold.ij.extensions.ManifoldPsiClassAnnotator"/>-->
    <methodReferencesSearch implementation="manifold.ij.extensions.ExtensionMethodUsageSearcher"/>
    <annotator language="JAVA" implementationClass="manifold.ij.extensions.ExtensionClassAnnotator"/>
    <daemon.highlightInfoFilter implementation="manifold.ij.extensions.ManHighlightInfoFilter"/>
    <renamePsiElementProcessor implementation="manifold.ij.extensions.RenameTypeManifoldFileProcessor" order="first"/>
    <moveFileHandler implementation="manifold.ij.extensions.MoveTypeManifoldFileProcessor" order="first"/>
    <findUsagesHandlerFactory implementation="manifold.ij.extensions.ManifoldFindUsagesHandlerFactory" order="first"/>
    <renamePsiElementProcessor implementation="manifold.ij.extensions.RenameResourceElementProcessor" order="first"/>
  </extensions>

</idea-plugin>
